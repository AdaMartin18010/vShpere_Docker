name: Technology Version Monitor

on:
  schedule:
    # 每周一早上9点运行 (UTC时间1点)
    - cron: '0 1 * * 1'
  workflow_dispatch:  # 允许手动触发

jobs:
  check-versions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests pyyaml beautifulsoup4
        
    - name: Check Kubernetes versions
      id: k8s
      run: |
        python scripts/check_k8s_version.py
      continue-on-error: true
      
    - name: Check Docker versions
      id: docker
      run: |
        python scripts/check_docker_version.py
      continue-on-error: true
      
    - name: Check Podman versions
      id: podman
      run: |
        python scripts/check_podman_version.py
      continue-on-error: true
      
    - name: Check vSphere versions
      id: vsphere
      run: |
        python scripts/check_vsphere_version.py
      continue-on-error: true
      
    - name: Generate report
      run: |
        python scripts/generate_version_report.py
        
    - name: Create issue if updates needed
      if: steps.k8s.outputs.update_needed == 'true' || steps.docker.outputs.update_needed == 'true' || steps.podman.outputs.update_needed == 'true' || steps.vsphere.outputs.update_needed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('version_report.md', 'utf8');
          
          // 检查是否已存在未关闭的版本更新Issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'version-update'
          });
          
          if (issues.data.length === 0) {
            // 创建新Issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[自动检测] 技术版本更新提醒 - ${new Date().toISOString().split('T')[0]}`,
              body: report,
              labels: ['version-update', 'automated']
            });
          } else {
            // 更新现有Issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issues.data[0].number,
              body: `## 最新版本检查结果 (${new Date().toISOString()})\n\n${report}`
            });
          }

